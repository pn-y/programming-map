name: Сферы применения языков программирования
description: |
  ##### PHP
  ___
  * Сферы применения: Веб-разработка
  * Сложность входа: легко
  * Почему его стоит учить:
    * Легко найти работу практически в любом городе.
    * Обычно компании использующие php чаще берут людей без опыта.
    * Большинство сайтов использует php.
    * Огромное количество библиотек на все случаи жизни.

  ##### Python
  ___
  * Сферы применения: веб-разработка, геймдев, CLI, десктопные приложения, анализ данных.
  * Сложность входа: легко
  * Почему его стоит учить:
    * Считается одним из самых подходящих языков для старта в программировании.
    * Широкая сфера применения, каждый найдет себе что-нибудь по вкусу.

  ##### JavaScript
  ___
  * Сферы применения: геймдев, веб-разработка, CLI, десктопные приложения.
  * Сложность входа: легко (только в самом начале)
  * Почему его стоит учить:
    * Как второй язык присутствует практически везде, где есть визуальная клиентская часть.

  ##### Java
  ___
  * Сферы применения: мобильная разработка, геймдев, веб-разработка, анализ данных, высокопроизводительные вычисления.
  * Сложность входа: средне
  * Почему его стоит учить:
    * Самые продвинутые средства разработки.
    * Самое большое количество инструментов для решения любых задач.
    * Код, написанный 20 лет назад, работает и сейчас.
    * На любую задачу есть спецификация.

  ##### Ruby
  ___
  * Сферы применения: веб-разработка, CLI.
  * Сложность входа: легко (только в самом начале)
  * Почему его стоит учить:
    * Только на Ruby есть Rails
    * Экосистема Ruby - пример для подражания, скопированный многими платформами.
    * Концентрация сообщества вокруг одного фреймворка дает на выходе
    огромное количество решений (интегрированных друг с другом) для всех задач в вебе.

  ##### Clojure
  * Сферы применения: веб-разработка, анализ данных.
  * Сложность входа: средне
  * Почему его стоит учить:
    * Дает сильный толчок в профессиональном развитии.
    * Современный язык с отличным дизайном.
    * jvm-based язык, что означает доступ ко всему Java-коду.

  ##### Erlang
  * Сферы применения: геймдев, системы массового обслуживания.
  * Сложность входа: легко (но непривычно)
  * Почему его стоит учить:
    * Язык с уникальным дизайном (actor model).
    * Позволяет писать паралелльный код даже не задумываясь об этом.
    * Очень просто создавать системы работающие одновременно с сотнями тысяч и миллионами пользователей.

  ##### Objective-C
  * Сферы применения: мобильная разработка (iOS), основной язык для разработки под Mac OS X
  * Сложность входа: средне
  * Почему его стоит учить:
    * Мобильная разработка — перспективное направление.

  ##### Go
  * Сферы применения: сетевые сервисы, API, CLI.
  * Сложность входа: легко
  * Почему его стоит учить:
    * Простой язык с минимумом магии
    * Простые, но мощные, примитивы для написания паралелльного кода

   ##### Scala
  ___
  * Сферы применения: может применяться где угодно на существующей Java платформе.
  * Сложность входа: сложно
  * Почему его стоит учить:
    * Язык с богатым синтаксисом, позволяет писать программы как в чисто императивном стиле, 
    так и в полностью функциональном; Haskell для повседневной разработки, чем просто улучшенная Java.

  ### C
  * Сложность входа: средне
  * Почему его стоит учить:
    * Хороший способ познакомиться с архитектурой компьютера.

  ### C++
  * Сложность входа: сложно

  ### Haskell
  * Сложность входа: сложно
  * Почему его стоит учить:
    * Если программа компилируется, то она работает (хотя не факт, что правильно).
    * Уровень абстракций поднят на пиковый уровень.

  ### C&#35;
  * Сложность входа: средне
  * Почему его стоит учить:
    * Потому что вам нравится Microsoft.

  ### Kotlin
  ### Ocaml
  ### Swift
